// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Customer {
  customer_id   Int      @id @default(autoincrement())
  first_name    String? 
  last_name     String?
  email         String   @unique
  phone_number  String?
  address       String?
  password      String
  orders        Order[]
  carts         Cart[]
}

model Order {
  order_id    Int       @id @default(autoincrement())
  order_date  DateTime?
  customer_id Int?
  customer    Customer? @relation(fields: [customer_id], references: [customer_id], onDelete: SetNull, onUpdate: Cascade)
  payment     Payment?
}

model Cart {
  cart_id     Int       @id @default(autoincrement())
  customer_id Int
  product_id  Int
  quantity    Int       @default(0)
  added_at    DateTime  @default(now())

  customer    Customer  @relation(fields: [customer_id], references: [customer_id], onDelete: Cascade, onUpdate: Cascade)
  product     Product   @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: Cascade)
}

model Payment {
  payment_id     Int      @id @default(autoincrement())
  order_id       Int
  payment_date   DateTime @default(now())
  payment_amount Decimal  @db.Decimal(10, 2)
  payment_method String
  payment_status String

  order          Order    @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: Cascade)
}
