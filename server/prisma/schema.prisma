generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  customer_id  Int     @id @default(autoincrement())
  first_name   String? @db.VarChar(255)
  last_name    String? @db.VarChar(255)
  email        String  @unique @db.VarChar(255)
  phone_number String? @db.VarChar(255)
  address      String? @db.VarChar(255)
  password     String  @db.VarChar(255)
  carts        Cart[]
  orders       Order[]
}

model Product {
  product_id          Int      @id @default(autoincrement())
  product_name        String?  @db.VarChar(255)
  product_price       Decimal? @db.Decimal(10, 2)
  product_description String?
  product_quantity    String?  @db.VarChar(255)
  image_url           String?
  carts               Cart[]
}

model Order {
  order_id    Int       @id @default(autoincrement())
  customer_id Int?
  order_date  DateTime? @db.Date
  customer    Customer? @relation(fields: [customer_id], references: [customer_id])
  payments    Payment[]
}

model Cart {
  cart_id     Int      @id @default(autoincrement())
  customer_id Int
  product_id  Int
  quantity    Int      @default(0)
  added_at    DateTime @default(now()) @db.Timestamp(6)
  customer    Customer @relation(fields: [customer_id], references: [customer_id], onDelete: Cascade)
  product     Product  @relation(fields: [product_id], references: [product_id], onDelete: Cascade)
}

model Payment {
  payment_id     Int      @id @default(autoincrement())
  order_id       Int
  payment_date   DateTime @default(now()) @db.Timestamp(6)
  payment_amount Decimal  @db.Decimal(10, 2)
  payment_method String   @db.VarChar(50)
  payment_status String   @db.VarChar(50)
  order          Order    @relation(fields: [order_id], references: [order_id], onDelete: Cascade)
}
